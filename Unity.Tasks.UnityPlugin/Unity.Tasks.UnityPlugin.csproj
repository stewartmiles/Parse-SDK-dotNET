<?xml version="1.0" encoding="utf-8"?>
<Project ToolsVersion="4.0" DefaultTargets="Build" xmlns="http://schemas.microsoft.com/developer/msbuild/2003">
  <Import Project="$(MSBuildExtensionsPath)\$(MSBuildToolsVersion)\Microsoft.Common.props" Condition="Exists('$(MSBuildExtensionsPath)\$(MSBuildToolsVersion)\Microsoft.Common.props')" />
  <PropertyGroup>
    <Configuration Condition=" '$(Configuration)' == '' ">Debug</Configuration>
    <Platform Condition=" '$(Platform)' == '' ">AnyCPU</Platform>
    <ProjectGuid>{2B36560F-64B5-4CEE-9F85-ED8A4FA64A1B}</ProjectGuid>
    <OutputType>Library</OutputType>
    <AppDesignerFolder>Properties</AppDesignerFolder>
    <RootNamespace>Unity.Tasks</RootNamespace>
    <AssemblyName>Unity.Tasks.UnityPlugin</AssemblyName>
    <TargetFrameworkVersion>v3.5</TargetFrameworkVersion>
    <FileAlignment>512</FileAlignment>
    <TargetFrameworkProfile>
    </TargetFrameworkProfile>
    <SolutionDir Condition="$(SolutionDir) == '' Or $(SolutionDir) == '*Undefined*'">..\</SolutionDir>
    <RestorePackages>true</RestorePackages>
    <ProductVersion>10.0.0</ProductVersion>
    <SchemaVersion>2.0</SchemaVersion>
  </PropertyGroup>
  <PropertyGroup Condition=" '$(Configuration)|$(Platform)' == 'Debug|AnyCPU' ">
    <DebugSymbols>true</DebugSymbols>
    <DebugType>full</DebugType>
    <Optimize>false</Optimize>
    <OutputPath>bin\Debug\Unity\</OutputPath>
    <DefineConstants>TRACE;DEBUG;UNITY</DefineConstants>
    <ErrorReport>prompt</ErrorReport>
    <WarningLevel>4</WarningLevel>
    <LangVersion>5</LangVersion>
  </PropertyGroup>
  <PropertyGroup Condition=" '$(Configuration)|$(Platform)' == 'Release|AnyCPU' ">
    <DebugType>pdbonly</DebugType>
    <Optimize>true</Optimize>
    <OutputPath>bin\Release\Unity\</OutputPath>
    <DefineConstants>TRACE;UNITY</DefineConstants>
    <ErrorReport>prompt</ErrorReport>
    <WarningLevel>4</WarningLevel>
    <LangVersion>5</LangVersion>
    <DocumentationFile>bin\Release\Unity\Unity.Tasks.xml</DocumentationFile>
  </PropertyGroup>
  <ItemGroup>
    <Reference Include="System" />
    <Reference Include="System.Core" />
    <Reference Include="UnityEngine, Version=0.0.0.0, Culture=neutral, processorArchitecture=MSIL">
      <SpecificVersion>False</SpecificVersion>
      <HintPath>..\UnityEngine.dll</HintPath>
      <Private>False</Private>
    </Reference>
  </ItemGroup>
  <ItemGroup>
    <!-- Assembly info, etc. -->
    <Compile Include="Properties\*.cs" />
  </ItemGroup>
  <Import Project="$(MSBuildToolsPath)\Microsoft.CSharp.targets" />
  <Import Project="$(SolutionDir)\.nuget\NuGet.targets" Condition="Exists('$(SolutionDir)\.nuget\NuGet.targets')" />
  <ItemGroup>
    <ProjectReference Include="..\Unity.Tasks\Unity.Tasks.csproj">
      <Project>{CE75C800-A97F-4464-9A8B-3F65258456BF}</Project>
      <Name>Unity.Tasks</Name>
    </ProjectReference>
  </ItemGroup>
  <ItemGroup>
    <ProjectReference Include="..\Unity.Tasks.TypeForwards\Unity.Tasks.TypeForwards.csproj">
      <Project>{F4A424D3-1BBF-4F29-BE8E-D1336505987E}</Project>
      <Name>Unity.Tasks.TypeForwards</Name>
    </ProjectReference>
  </ItemGroup>
  <PropertyGroup>
    <UnityProjectTemplatePath>UnityProjectTemplate</UnityProjectTemplatePath>
    <UnityProjectIntermediatePath>$(IntermediateOutputPath)\UnityProject</UnityProjectIntermediatePath>
    <UnityExecutablePath Condition="'$(OS)' == 'Windows'">$(ProgramFiles)\Unity\Editor\Unity.exe</UnityExecutablePath>
    <UnityExecutablePath Condition="'$(OS)' == 'Unix'">/Applications/Unity/Unity.app/Contents/MacOS/Unity</UnityExecutablePath>
    <BuildUnityPlugin Condition="'$(BuildUnityPlugin)' == ''">1</BuildUnityPlugin>
  </PropertyGroup>
  <ItemGroup>
    <UnityProjectTemplateFiles Include="UnityProjectTemplate\**\*.meta" />
  </ItemGroup>
  <Target Name="CreateUnityProject">
    <!-- Generate the Unity project. -->
    <Copy SourceFiles="@(UnityProjectTemplateFiles)"
          DestinationFolder="$(UnityProjectIntermediatePath)\%(RecursiveDir)" />
    <Copy SourceFiles="..\Unity.Compat\$(OutputPath)\Unity.Compat.dll;
                       ..\Unity.Compat.TypeForwards\$(OutputPath)\Unity.Compat.dll;
                       ..\Unity.Tasks\$(OutputPath)\Unity.Tasks.dll;
                       ..\Unity.Tasks.TypeForwards\$(OutputPath)\Unity.Tasks.dll;"
          DestinationFiles="
              $(UnityProjectIntermediatePath)\Assets\Parse\Plugins\Unity.Compat.dll;
              $(UnityProjectIntermediatePath)\Assets\Parse\Plugins\dotNet45\Unity.Compat.dll;
              $(UnityProjectIntermediatePath)\Assets\Parse\Plugins\Unity.Tasks.dll;
              $(UnityProjectIntermediatePath)\Assets\Parse\Plugins\dotNet45\Unity.Tasks.dll;" />
  </Target>
  <Target Name="BuildUnityPlugin"
          DependsOnTargets="CreateUnityProject"
          Condition="'$(BuildUnityPlugin)' == '1'">
    <!-- Convert paths to absolute paths (required to run Unity).
         ConvertToAbsolutePath isn't available in xbuild so use CreateItem to expand the path. -->
    <CreateItem Include="$(UnityProjectIntermediatePath)">
      <Output TaskParameter="Include" ItemName="_UnityProjectIntermediatePath" />
    </CreateItem>
    <CreateItem Include="$(IntermediateOutputPath)">
      <Output TaskParameter="Include" ItemName="_IntermediateOutputPath" />
    </CreateItem>
    <CreateItem Include="$(OutputPath)">
      <Output TaskParameter="Include" ItemName="_OutputPath" />
    </CreateItem>
    <!-- Run Unity to generate the plugin package. -->
    <ItemGroup>
      <UnityArgs Include="-batchmode" />
      <UnityArgs Include="-projectPath &quot;%(_UnityProjectIntermediatePath.FullPath)&quot;" />
      <UnityArgs Include="-logFile &quot;%(_IntermediateOutputPath.FullPath)/UnityProject.log&quot;" />
      <UnityArgs Include="-exportPackage Assets/Parse &quot;%(_OutputPath.FullPath)/ParseTasks.unitypackage&quot;" />
      <UnityArgs Include="-quit" />
    </ItemGroup>
    <Exec Command="&quot;$(UnityExecutablePath)&quot; @(UnityArgs,' ')" Outputs="$(OutputPath)/ParseTasks.unitypackage" />
  </Target>
  <Target Name="AfterBuild" DependsOnTargets="CreateUnityProject;BuildUnityPlugin"/>
</Project>
